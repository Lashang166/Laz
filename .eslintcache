[{"C:\\New folder\\Laz\\src\\index.js":"1","C:\\New folder\\Laz\\src\\App.js":"2","C:\\New folder\\Laz\\src\\routes.js":"3","C:\\New folder\\Laz\\src\\pages\\Shop.jsx":"4","C:\\New folder\\Laz\\src\\pages\\User.jsx":"5","C:\\New folder\\Laz\\src\\pages\\Home.jsx":"6","C:\\New folder\\Laz\\src\\pages\\admin\\Admin.jsx":"7","C:\\New folder\\Laz\\src\\pages\\Product.jsx":"8","C:\\New folder\\Laz\\src\\components\\Button.jsx":"9","C:\\New folder\\Laz\\src\\components\\Box.jsx":"10","C:\\New folder\\Laz\\src\\components\\Path.jsx":"11","C:\\New folder\\Laz\\src\\components\\ProductCard.jsx":"12","C:\\New folder\\Laz\\src\\components\\Header.jsx":"13","C:\\New folder\\Laz\\src\\pages\\admin\\NavSide.jsx":"14","C:\\New folder\\Laz\\src\\pages\\admin\\Header.jsx":"15","C:\\New folder\\Laz\\src\\pages\\admin\\ProductManager.jsx":"16","C:\\New folder\\Laz\\src\\pages\\Dashboard.jsx":"17","C:\\New folder\\Laz\\src\\components\\Register.jsx":"18","C:\\New folder\\Laz\\src\\components\\FilterBlog.jsx":"19","C:\\New folder\\Laz\\src\\components\\Login.jsx":"20","C:\\New folder\\Laz\\src\\components\\UserInfomation.jsx":"21","C:\\New folder\\Laz\\src\\pages\\admin\\Table.jsx":"22","C:\\New folder\\Laz\\src\\pages\\OrdersManager.jsx":"23","C:\\New folder\\Laz\\src\\pages\\Cart.jsx":"24","C:\\New folder\\Laz\\src\\components\\CartItem.jsx":"25"},{"size":324,"mtime":1612836392301,"results":"26","hashOfConfig":"27"},{"size":982,"mtime":1612836392293,"results":"28","hashOfConfig":"27"},{"size":717,"mtime":1612843714144,"results":"29","hashOfConfig":"27"},{"size":6368,"mtime":1612836392304,"results":"30","hashOfConfig":"27"},{"size":685,"mtime":1612836392305,"results":"31","hashOfConfig":"27"},{"size":184,"mtime":1612836392303,"results":"32","hashOfConfig":"27"},{"size":739,"mtime":1612837627911,"results":"33","hashOfConfig":"27"},{"size":11783,"mtime":1612836392303,"results":"34","hashOfConfig":"27"},{"size":628,"mtime":1612836392295,"results":"35","hashOfConfig":"27"},{"size":341,"mtime":1612836392294,"results":"36","hashOfConfig":"27"},{"size":2868,"mtime":1612836392299,"results":"37","hashOfConfig":"27"},{"size":3844,"mtime":1612836392299,"results":"38","hashOfConfig":"27"},{"size":3652,"mtime":1612836392296,"results":"39","hashOfConfig":"27"},{"size":3973,"mtime":1612842632915,"results":"40","hashOfConfig":"27"},{"size":534,"mtime":1612836392308,"results":"41","hashOfConfig":"27"},{"size":5900,"mtime":1612838957174,"results":"42","hashOfConfig":"27"},{"size":3830,"mtime":1612836392302,"results":"43","hashOfConfig":"27"},{"size":4109,"mtime":1612836392300,"results":"44","hashOfConfig":"27"},{"size":1556,"mtime":1612836392295,"results":"45","hashOfConfig":"27"},{"size":3830,"mtime":1612836392298,"results":"46","hashOfConfig":"27"},{"size":5975,"mtime":1612836392300,"results":"47","hashOfConfig":"27"},{"size":13323,"mtime":1612838526313,"results":"48","hashOfConfig":"27"},{"size":1771,"mtime":1612839018677,"results":"49","hashOfConfig":"27"},{"size":804,"mtime":1612849258015,"results":"50","hashOfConfig":"27"},{"size":2092,"mtime":1612850906735,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"svy64r",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\New folder\\Laz\\src\\index.js",[],["116","117"],"C:\\New folder\\Laz\\src\\App.js",[],"C:\\New folder\\Laz\\src\\routes.js",[],"C:\\New folder\\Laz\\src\\pages\\Shop.jsx",["118","119"],"import React, { useState } from 'react'\r\nimport { Header } from '../components/Header'\r\nimport Path from '../components/Path'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Container, makeStyles, Typography, FormControl, Select, InputLabel, MenuItem    } from '@material-ui/core'\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport FilterBlog from '../components/FilterBlog'\r\nimport ProductCard from '../components/ProductCard'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    filter: {\r\n        paddingTop: \"15px\",\r\n    },\r\n    sort: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n        padding: \"15px 20px\",\r\n        height: \"50px\",\r\n        borderBottom: \"1px solid lightgray\",\r\n        marginBottom: \"10px\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    sortControl: {\r\n        height: \"15px\"\r\n    }\r\n\r\n}))\r\n\r\nconst filters = [\r\n    {\r\n        title: \"หมวดหมู่\",\r\n        lists: [\"เสื้อผ้า\",\"ชุดชั้นใน\"],\r\n        type: \"checkbox\",\r\n        shap: false\r\n    },\r\n    {\r\n        title: \"ไซส์\",\r\n        lists: [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"],\r\n        type: \"checkbox\",\r\n        shap: false\r\n    },\r\n    {\r\n        title: \"สี\",\r\n        lists: [\"#f44336\", \"#f50057\", \"#9c27b0\", \"#2196f3\", \"#4caf50\", \"#ffeb3b\"],\r\n        type: \"checkbox\",\r\n        shap:true\r\n    },\r\n]\r\n\r\nconst Accordion = withStyles({\r\n    root: {\r\n      border: '1px solid rgba(0, 0, 0, .125)',\r\n      boxShadow: 'none',\r\n      '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n      },\r\n      '&:before': {\r\n        display: 'none',\r\n      },\r\n      '&$expanded': {\r\n        margin: 'auto',\r\n      },\r\n    },\r\n    expanded: {},\r\n  })(MuiAccordion);\r\n  \r\n  const AccordionSummary = withStyles({\r\n    root: {\r\n      backgroundColor: 'rgba(0, 0, 0, .03)',\r\n      borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n      marginBottom: -1,\r\n      minHeight: 56,\r\n      '&$expanded': {\r\n        minHeight: 56,\r\n      },\r\n    },\r\n    content: {\r\n      '&$expanded': {\r\n        margin: '12px 0',\r\n      },\r\n    },\r\n    expanded: {},\r\n  })(MuiAccordionSummary);\r\n  \r\n  const AccordionDetails = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiAccordionDetails);\r\n\r\n\r\n\r\nconst Shop = () => {\r\n    const classes = useStyles()\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const AccordionHandle = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n      };\r\n     \r\n\r\n    return (\r\n        <div style={{backgroundColor: \"#fff\" }}>\r\n            <Header />\r\n            <Path />\r\n            <div  style={{backgroundColror: \"#fff\" , width: \"100%\"}}>\r\n                <Container style={{marginTop: \"15px\", backgroundColor: \"#fff\"}}>\r\n                <Grid container >\r\n                    <Grid item lg={3} xs={12} >\r\n                        <div className={classes.filter}>\r\n                            <Typography variant=\"h5\" color=\"initial\">\r\n                                Filter\r\n                            </Typography>\r\n                            <div className=\"mt-3\">\r\n                                {\r\n                                    filters.map((item, i) => (\r\n                                        <Accordion  expanded={expanded === item.title} onChange={AccordionHandle(item.title)}>\r\n                                            <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                                            <Typography>{item.title}</Typography>\r\n                                            </AccordionSummary>\r\n                                            <AccordionDetails>\r\n                                                    <FilterBlog \r\n                                                        title={item.title} \r\n                                                        lists={item.lists} \r\n                                                        type={item.type}\r\n                                                        shap={item.shap}\r\n                                                        key={i}\r\n                                                    />\r\n                                            </AccordionDetails>\r\n                                        </Accordion>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item lg={9} xs={12}> \r\n\r\n                        <div className={classes.sort}>\r\n                            <InputLabel style={{marginLeft: \"5px\"}}>Sort By</InputLabel>\r\n                            <Select  label=\"Sort By\">\r\n                                <MenuItem>1</MenuItem>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                            </Select>\r\n                        </div>\r\n                        {/* ------ product --------  */}\r\n                        <Grid container spacing={2} className=\"pl-2\">\r\n                            <Grid item xs={6} lg={3}>\r\n                                <ProductCard />\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={3}>\r\n                                <ProductCard />\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={3}>\r\n                                <ProductCard />\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={3}>\r\n                                <ProductCard />\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={3}>\r\n                                <ProductCard />\r\n                            </Grid>\r\n                         \r\n                        </Grid>           \r\n                    </Grid >\r\n                </Grid>\r\n                </Container>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Shop","C:\\New folder\\Laz\\src\\pages\\User.jsx",[],"C:\\New folder\\Laz\\src\\pages\\Home.jsx",[],"C:\\New folder\\Laz\\src\\pages\\admin\\Admin.jsx",[],"C:\\New folder\\Laz\\src\\pages\\Product.jsx",["120","121","122","123","124","125","126","127","128","129"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  FormControlLabel,\r\n  Radio,\r\n  FormControl,\r\n  FormHelperText,\r\n  FormLabel,\r\n  RadioGroup,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nimport { Header } from \"../components/Header\";\r\nimport Path from \"../components/Path\";\r\nimport Box from \"../components/Box\";\r\nimport Btn from \"../components/Button\";\r\nimport ProductCard from \"../components/ProductCard\";\r\n\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport  IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  order: {\r\n    color: \"#f2f2f2\",\r\n    fontSize: \"15px\",\r\n    padding: \"8px 12px\",\r\n    position: \"absolute\",\r\n    bottom: \"8px\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  arrow: {\r\n    cursor: \"pointer\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    width: \"auto\",\r\n    marginTop: \"-22px\",\r\n    padding: \"16px\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"18px\",\r\n    transition: \"0.6s ease\",\r\n    borderRadius: \"0 3px 3px 0\",\r\n    userSelect: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(0,0,0,0.8)\",\r\n    },\r\n  },\r\n  next: {\r\n    right: \"0\",\r\n    borderRadius: \"3px 0 0 3px\",\r\n  },\r\n  fade: {\r\n    WebkitAnimationName: \"fade\",\r\n    WebkitAnimationDuration: \"1.5s\",\r\n    animationName: \"fade\",\r\n    animationDuration: \"1.5s\",\r\n  },\r\n  detail: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    background: \"yellow\",\r\n    //heidht\r\n  },\r\n}));\r\n\r\nconst images = [\r\n  \"https://images.unsplash.com/photo-1612490020092-e4f7a3d17dec?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80\",\r\n  \"https://images.unsplash.com/photo-1611769864329-ef8d67d6cf78?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80\",\r\n  \"https://images.unsplash.com/photo-1488426862026-3ee34a7d66df?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=334&q=80\",\r\n];\r\n\r\nconst Product = () => {\r\n  const classes = useStyles();\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const slideHandle = (type) => {\r\n    if (type === \"next\") {\r\n      if (currentImage < images.length - 1) {\r\n        setCurrentImage(currentImage + 1);\r\n      } else {\r\n        setCurrentImage(0);\r\n      }\r\n    } else {\r\n      if (currentImage == 0) {\r\n        setCurrentImage(images.length - 1);\r\n      } else {\r\n        setCurrentImage(currentImage - 1);\r\n      }\r\n    }\r\n    console.log(currentImage);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Path />\r\n      <Container className=\"pt-3\" style={{ backgroundColor: \"white\" }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item lg={5}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                {images.map((img, index) => (\r\n                  <div\r\n                    className=\"my-1 cursor-pointer\"\r\n                    key={index}\r\n                    onClick={() => setCurrentImage(index)}\r\n                  >\r\n                    <img src={img} className=\"min-w-full \" />\r\n                  </div>\r\n                ))}\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <div className=\"w-96 relative m-auto bg-primary\">\r\n                  {/* image */}\r\n                  <div className={`${classes.mySlidee} ${classes.fade}`}>\r\n                    <div className=\"text-xs py-2 px-3 absolute top-0\">\r\n                      {\" \"}\r\n                      1 / 3{\" \"}\r\n                    </div>\r\n                    <img\r\n                      src={images[currentImage]}\r\n                      alt=\"1\"\r\n                      className=\"w-full\"\r\n                    />\r\n                  </div>\r\n                  {/* prev next */}\r\n                  <a\r\n                    className={classes.arrow}\r\n                    onClick={() => {\r\n                      slideHandle(\"prev\");\r\n                    }}\r\n                  >\r\n                    &#10094;\r\n                  </a>\r\n                  <a\r\n                    className={`${classes.arrow} ${classes.next}`}\r\n                    onClick={() => {\r\n                      slideHandle(\"next\");\r\n                    }}\r\n                  >\r\n                    &#10095;\r\n                  </a>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item lg={7} className=\"p-5\">\r\n            <div className=\"h-full px-10 lg:pb-20 flex flex-col justify-around\">\r\n              <div>\r\n                <Typography variant=\"h4\" compoent=\"b\" color=\"initial\">\r\n                  เชิ้ตเข้ารูป supernoniron แขนยาว\r\n                </Typography>\r\n                <div className=\"flex mt-5\">\r\n                  <Typography variant=\"h5\" compoent=\"b\" color=\"primary\">\r\n                    THB 990.00\r\n                  </Typography>\r\n                  {/* <Rating name=\"read-only\" value={3} readOnly /> */}\r\n                </div>\r\n                <Typography variant=\"subtitle1\" className=\"mt-2\">\r\n                  บอกลาการรีดด้วยผ้าคอตตอน 100% ที่ให้สัมผัสสบาย\r\n                  เสื้อเชิ้ตคุณภาพสูงที่เหมาะสำหรับสวมใส่ในทุกวัน\r\n                </Typography>\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <Typography variant=\"h6\">สี</Typography>\r\n                <RadioGroup>\r\n                  <div className=\"flex\" >\r\n                    <Radio \r\n                      value=\"a\" \r\n                      icon={ <Box color=\"#f6685e\" /> } \r\n                      checkedIcon={  <Box color=\"#f6685e\" checked={true} /> }\r\n                    />\r\n                    <Radio \r\n                      value=\"ass\" \r\n                      icon={ <Box color=\"#4dabf5\" /> } \r\n                      checkedIcon={  <Box color=\"#4dabf5\" checked={true} /> }\r\n                    />\r\n                    <Radio \r\n                      value=\"aa\" \r\n                      icon={ <Box color=\"#ffeb3b\" /> } \r\n                      checkedIcon={  <Box color=\"#ffeb3b\" checked={true} /> }\r\n                    />\r\n                    \r\n\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n              <Typography variant=\"h6\">ขนาด</Typography>\r\n                <RadioGroup>\r\n                  <div className=\"flex\" >\r\n                    <Radio \r\n                      value=\"s\" \r\n                      icon={ <Box>S</Box> } \r\n                      checkedIcon={   <Box checked={true} >S</Box > }\r\n                    />\r\n                    <Radio \r\n                      value=\"da\" \r\n                      icon={ <Box>L</Box> } \r\n                      checkedIcon={   <Box checked={true} >L</Box > }\r\n                    />\r\n                    <Radio \r\n                      value=\"ad\" \r\n                      icon={ <Box>M</Box> } \r\n                      checkedIcon={   <Box checked={true} >M</Box > }\r\n                    />\r\n                    <Radio \r\n                      value=\"add\" \r\n                      icon={ <Box>XL</Box> } \r\n                      checkedIcon={   <Box checked={true} >XL</Box > }\r\n                    />\r\n                    \r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n              <div className=\"flex items-center \">\r\n                <Typography variant=\"h6\">จำนวน :</Typography>\r\n                <div className=\"flex\">\r\n                  <IconButton\r\n                    className=\"focus:outline-none text-xl\"\r\n                    onClick={() => (qty == 1 ? \"\" : setQty(qty - 1))}\r\n                  >\r\n                    <IndeterminateCheckBoxIcon\r\n                      color=\"primary\"\r\n                      fontSize=\"large\"\r\n                    />\r\n                  </IconButton>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    className=\"w-10 h-10 focus:outline-none text-xl mt-2 bg-blue-50 text-center\"\r\n                    value={qty}\r\n                    onChange={(e) => setQty(e.target.value)}\r\n                  />\r\n                  <IconButton\r\n                    className=\"focus:outline-none\"\r\n                    onClick={() => setQty(qty + 1)}\r\n                  >\r\n                    <AddBoxIcon\r\n                      color=\"primary\"\r\n                      fontSize=\"large\"\r\n                      className=\"focus:outline-none text-xl\"\r\n                    />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex\">\r\n                <Btn>เพิ่มลงรถเข็น</Btn>\r\n                <IconButton className=\"border-3 border-black\">\r\n                  <FavoriteBorderIcon style={{ fontSize: 30 }} />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid xs={12}>\r\n            {/* -----review---- */}\r\n            <div className=\"w-full flex flex-col bg-yellowg-600 p-3 mt-7\">\r\n              <Typography variant=\"h5\" className=\"text-2xl font-medium\">\r\n                Review\r\n              </Typography>\r\n              <div className=\"flex flex-col bg-gray-200 w-full  mt-4 rounded-sm\">\r\n                {/* { review && review.map((r, i) => ( */}\r\n                <div className=\"flex bg-red-100d w-full p-6 space-x-6\">\r\n                  <div className=\"w-full min-h-44 max-h-full bg-gray-100 flex flex-col p-5\">\r\n                    <p className=\"text-lg font-bold\">admin- 3/10/11</p>\r\n                    <p className=\"text-gray-500 font-thin pt-3\">asdfasdf</p>\r\n                  </div>\r\n                </div>\r\n                {/* ))} */}\r\n\r\n                <div className=\"flex bg-red-100d w-full p-6 space-x-6\">\r\n                  <div className=\"w-full min-h-44 max-h-full bg-gray-100f flex flex-col p-5\">\r\n                    <p className=\"text-lg font-bold\">Your Review *</p>\r\n                    <textarea\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      cols=\"30\"\r\n                      rows=\"10\"\r\n                      className=\"w-full mt-4 mb-2 rounded-sm focus:outline-none p-5\"\r\n                      placeholder=\"Your Review\"\r\n                    ></textarea>\r\n                    <Btn classNamee=\"w-64 h-12 bg-black rounded-sm text-white uppercase mt-3\">\r\n                      Submit\r\n                    </Btn>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid lg={12}>\r\n            <div className=\"mt-3\">\r\n              <Typography variant=\"h5\">Relate item</Typography>\r\n\r\n              <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\r\n                <Grid item xs={3}>\r\n                  <ProductCard />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <ProductCard />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <ProductCard />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <ProductCard />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\New folder\\Laz\\src\\components\\Button.jsx",["130"],"import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btn: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    fontSize: \"18px\",\r\n    width: \"240px\",\r\n   // padding: \"4px 2px\",\r\n    color: \"#fff\",\r\n    transition: \".3s\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.third.light,\r\n\r\n    }\r\n  }\r\n}));\r\n\r\nconst Btn = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <button className={classes.btn}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Btn;\r\n","C:\\New folder\\Laz\\src\\components\\Box.jsx",[],"C:\\New folder\\Laz\\src\\components\\Path.jsx",["131","132","133","134"],"import { \r\n        Breadcrumbs, \r\n        Container, \r\n        makeStyles,\r\n        Typography } from '@material-ui/core';\r\n\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nimport { MemoryRouter, Link, Route,  } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        //backgroundColor: \"#fff\",\r\n        Height: \"40px\",\r\n        marginTop: theme.spacing(1.5),\r\n        padding: \"10px 20px\",\r\n        justifyItems: \"center\"\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n        width: 20,\r\n        height: 20,\r\n    },\r\n    link: {\r\n        display: \"flex\",\r\n        justifyItems: \"center\",\r\n        textDecoration: \"none\",\r\n        color: theme.palette.secondary.light\r\n    }\r\n}))\r\n\r\n\r\nconst Path = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n        <Container>\r\n            <Breadcrumbs>\r\n                <Link color=\"inherit\" to=\"/\" className={classes.link}>\r\n                    <HomeIcon className={classes.icon} />\r\n                    Home\r\n                </Link>\r\n                <Link color=\"inherit\" to=\"/shop\" className={classes.link}>\r\n                    <ShoppingCartIcon className={classes.icon} />\r\n                    Shop\r\n                </Link>\r\n            </Breadcrumbs>\r\n        </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Path\r\n\r\n\r\n\r\n\r\n\r\n{/* <MemoryRouter initialEntries={[\"/\"]} initialIndex={0}>\r\n            <Route>\r\n              {( { location } ) => {\r\n                  const pathnames = location.pathname.split('/').filter((x) => x);\r\n                    return (\r\n                        <Breadcrumbs>\r\n                            <Link color=\"inherit\" to=\"/\">\r\n                                Home\r\n                            </Link>\r\n                            { pathnames.map((value, index) => {\r\n                                const last = index === pathnames.length - 1;\r\n                                const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                                console.log(last);\r\n                                console.log(value);\r\n                                console.log(to);\r\n                                return last ? (\r\n                                    <Typography color=\"textPrimary\" >\r\n                                      \r\n                                    </Typography>\r\n                                  ) : (\r\n                                    <Link color=\"inherit\" >\r\n                                      \r\n                                    </Link>\r\n                                  );\r\n                            }) }\r\n                        </Breadcrumbs>\r\n                    )\r\n              }}\r\n            </Route>\r\n</MemoryRouter> */}","C:\\New folder\\Laz\\src\\components\\ProductCard.jsx",["135","136","137"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n  Typography,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  CardActionArea \r\n} from \"@material-ui/core\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport PanoramaFishEyeTwoToneIcon from '@material-ui/icons/PanoramaFishEyeTwoTone';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"5px\",\r\n  },\r\n  media: {\r\n    maxHeight: \"273px\",\r\n    maxWidth: \"233px\",\r\n    minWidth: \"100%\",\r\n  },\r\n  img: {\r\n    minWidth: \"50%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  content: {\r\n    backgroundColor: \"#fff\",\r\n    height: \"73px\",\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    //paddingLeft: \"5px\",\r\n  },\r\n  btn: {\r\n      height: \"100%\",\r\n      padding: \"10px\",\r\n      borderLeft: \"1px solid lightgrey\",\r\n      display: \"flex\",\r\n      left: \"71%\",\r\n      top: 0,\r\n      position: \"absolute\",\r\n      backgroundColor: \"#fff\",\r\n      transition: \"0.3s\",\r\n      '&:hover': {\r\n          zIndex: 2,\r\n          width: \"100%\",\r\n          left: 0\r\n      }\r\n  },\r\n\r\n\r\n}));\r\n\r\nconst ProductCard = () => {\r\n  const [image, setImage] = useState(\r\n    \"https://images.unsplash.com/photo-1581044777550-4cfa60707c03?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=333&q=80\"\r\n  );\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.rooot}>\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.media}>\r\n          <CardActionArea className=\"focus:outline-none\">\r\n            <Link to={`/product/${\"1\"}`}> <img src={image} alt=\"5\" /> </Link>\r\n          </CardActionArea>\r\n        </div>\r\n        <div className={classes.content}>\r\n              <CardActionArea className=\"focus:outline-none\">\r\n                    <Link to={`/product/${\"1\"}`}>\r\n                    <div className=\"flex flex-grow flex-col p-2 pl-3\">\r\n                        <Typography variant=\"h5\">\r\n                            Lizard \r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" className=\"mb-2\">$199</Typography>\r\n                    </div>\r\n                    </Link>\r\n              </CardActionArea>\r\n          <div className={classes.btn}>\r\n            <IconButton className=\"focus:outline-none\">\r\n              <AddShoppingCartIcon \r\n                color=\"secondary\" \r\n                style={{ fontSize: 33}}\r\n            />\r\n            </IconButton>\r\n\r\n            {/* -----form------- */}\r\n\r\n            <FormControl className=\"w-14\" style={{marginLeft: \"2px\"}} >\r\n                <InputLabel >Size</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                native\r\n                >\r\n                    <option value={10}>S</option>\r\n                    <option value={20}>M</option>\r\n                    <option value={30}>L</option>\r\n                    <option value={30}>X</option>\r\n                    <option value={30}>XL</option>\r\n                </Select>\r\n            </FormControl>\r\n     \r\n            <FormControl className=\"w-14\" style={{marginLeft: \"5px\"}} >\r\n                <InputLabel >Color</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                native\r\n                >\r\n                    <option value={20}>M</option>\r\n                    <option value={30}>L</option>\r\n                    <option value={30}>X</option>\r\n                    <option value={30}>XL</option>\r\n                </Select>\r\n            </FormControl>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","C:\\New folder\\Laz\\src\\components\\Header.jsx",["138","139"],"import React, {useState} from 'react'\r\nimport { \r\n        Container, \r\n        Grid, \r\n        makeStyles, \r\n        InputBase, \r\n        IconButton,\r\n        Badge,\r\n        Modal} from \"@material-ui/core\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //backgroundColor: \"#f7f7f7\",\r\n    background: \"#fff\",\r\n    color: \"#9e9e9e\",\r\n    minHeight: \"80px\",\r\n    paddingTop: \"5px\",\r\n    borderBottom: \"1px solid lightgray\"\r\n  },\r\n  search: {\r\n      background: \"#eff0f5\",\r\n      width: \"90%\",\r\n      paddingLeft: \"8px\"\r\n  },\r\n  searchBtn: {\r\n    background: theme.palette.primary.main,\r\n    color: \"#Fff\"\r\n  },\r\n  shopMenu: {\r\n      margin: \"5px 0\"\r\n  },\r\n  list: {\r\n      marginLeft: \"20px\",\r\n      color: \"#9e9e9e\",\r\n      textDecoration: \"none\"\r\n  },\r\n  navAction: {\r\n      paddingTop: \"15px\"\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nexport const Header = () => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <Grid container alignItems=\"center\" style={{background: \"\"}}>\r\n          <Grid item xs={3}>\r\n            <div className=\"logo\">\r\n              <img \r\n                src=\"https://laz-img-cdn.alicdn.com/images/ims-web/TB1KB2laMFY.1VjSZFnXXcFHXXa.png\" \r\n                alt=\"\"\r\n                width =\"150px\"\r\n                height=\"50px\" />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <div className={classes.navAction}>\r\n                <InputBase \r\n                    placeholder=\"Search\"\r\n                    className={classes.search}\r\n                    endAdornment={\r\n                        <div className={classes.searchBtn}>\r\n                            <IconButton>\r\n                                <SearchIcon style={{ color: \"#fff\"}}/>\r\n                            </IconButton>\r\n                        </div>\r\n                    }\r\n                />\r\n                <div className={classes.shopMenu}>\r\n                    <Link to=\"/shop\"  >สินค้ามาใหม่</Link>\r\n                    <Link to=\"/shop\"  className={classes.list}>เสื้อผ้า</Link>\r\n                    <Link to=\"/shop\"  className={classes.list}>รองเท้า</Link>                      \r\n                    <Link to=\"/shop\" className={classes.list}>สินค้าทั้งหมด</Link>                      \r\n                </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item >\r\n              <IconButton>\r\n                  <Badge color=\"error\" badgeContent={4}>\r\n                      <ShoppingCartOutlinedIcon color=\"secondary\"  style={{fontSize: \"28px\"}}/>\r\n                  </Badge>\r\n              </IconButton>\r\n              <IconButton>\r\n                  <Badge color=\"error\" badgeContent={4}>\r\n                      <NotificationsOutlinedIcon color=\"secondary\" style={{fontSize: \"28px\"}}/>\r\n                  </Badge>\r\n              </IconButton>\r\n              <IconButton >\r\n                  <Link to=\"/user/login\">\r\n                    <Badge color=\"secondary\">\r\n                        <AccountCircleOutlinedIcon color=\"secondary\"  style={{fontSize: \"28px\"}}/>\r\n                    </Badge>\r\n                  </Link>\r\n              </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","C:\\New folder\\Laz\\src\\pages\\admin\\NavSide.jsx",["140","141"],"\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { \r\n    Avatar, \r\n    Paper,\r\n    List, \r\n    ListItem, \r\n    ListItemIcon, \r\n    ListItemText, \r\n    Typography,\r\n    } from '@material-ui/core'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: \"#272a34\",\r\n        color: \"#fff\",\r\n        //width: \"22%\",\r\n        minWidth: 350,\r\n        minHeight: \"100vh\",\r\n        height: \"100%\"\r\n\r\n    }\r\n}));\r\n\r\nconst menu = [\r\n    {\r\n        id: 0,\r\n        label: \"รายงาน\",\r\n        icon: <EqualizerIcon />,\r\n        path: \"/admin/\"\r\n    },\r\n    {\r\n        id: 1,\r\n        label: \"จัดการสินค้า\",\r\n        icon: <LocalMallIcon />,\r\n        path: \"/admin/productmanager\"\r\n    },\r\n    {\r\n        id: 2,\r\n        label: \"แจ้งเตือน\",\r\n        icon: <NotificationsNoneIcon />,\r\n        path: \"/user/dashboard/notification\"\r\n    },\r\n    {\r\n        id: 3,\r\n        label: \"รายการสั่งสินค้า\",\r\n        icon: <AirplanemodeActiveIcon />,\r\n        path: \"/admin/ordermanager\"\r\n    }\r\n]\r\n\r\nconst NavSide = () => {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper style={{background: \"#272a34\", color: \"#fff\"}} className=\"flex-col flex p-3 \">\r\n                 <div className=\"p-2 flex justify-center flex-col items-center \">\r\n                     <div className=\" w-36 flex justify-center relative\">\r\n                        <Avatar \r\n                            style={{width: \"115px\", height: \"115px\"}} \r\n                            src=\"https://images.unsplash.com/photo-1602423597260-6e754437411a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80\"\r\n                        />\r\n                        <div  className=\"absolute -bottom-1 z-10 -right-1\">\r\n                            <input accept=\"image/*\" className=\"hidden\" id=\"icon-button-file\" type=\"file\" />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                    <PhotoCamera fontSize=\"large\" />\r\n                                </IconButton>\r\n                            </label>\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"mt-2\">\r\n                        <Typography variant=\"h5\">Thomas Bruns</Typography>\r\n                        <p variant=\"subtitle2\" className=\"text-white\">Joined June 6, 2018</p>\r\n                     </div>\r\n                 </div>\r\n                <div>\r\n                    <List component=\"nav\">\r\n                        { menu.map((m, i) => (\r\n                            <Link to={m.path} key={m.id}>\r\n                                <ListItem button key={m.id}>\r\n                                    <ListItemIcon style={{color: \"#fff\"}}>\r\n                                        {m.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={m.label} />\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                    </List>\r\n                    \r\n                </div>\r\n             </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavSide\r\n","C:\\New folder\\Laz\\src\\pages\\admin\\Header.jsx",[],"C:\\New folder\\Laz\\src\\pages\\admin\\ProductManager.jsx",["142","143"],"import React, { useState } from \"react\";\r\n\r\nimport TableStyle from \"./Table\";\r\n\r\nimport { \r\n    Button, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Paper, \r\n    Typography,\r\n    FormControl,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    IconButton,\r\n    Checkbox,\r\n    FormControlLabel, \r\n    FormGroup} from \"@material-ui/core/\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    marginTop: theme.spacing(2)\r\n  },\r\n}));\r\n\r\n\r\nfunction createData(name, Brand, Stock, Rating, Sales, Price) {\r\n  return { name, Brand, Stock, Rating, Sales, Price };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', \"adidas\", 10, 3.5, 0, 200),\r\n  createData('Donut', \"452\", 25, 3.5, 0, 200),\r\n  createData('Eclair', \"Nike\", 16, 3.5, 0, 200),\r\n  createData('Frozen yoghurt', \"Hoya\", 3.5, 24, 0, 200),\r\n  createData('Gingerbread', \"univers\", 3.5, 49, 0, 200),\r\n  createData('Honeycomb', \"adidas\", 3, 3.5, 6.5, 200),\r\n  createData('Ice cream sandwich', \"uniqo\", 9.0, 3.5, 0, 200),\r\n  createData('Jelly Bean', \"uniqo\", 10, 3.5, 0, 200),\r\n  createData('KitKat', \"Nike\", 26, 3.5, 0, 200),\r\n  createData('Lollipop', \"Hoya\", 2, 3.5, 0, 200),\r\n  createData('Marshmallow', \"Nike\", 0, 81, 0, 200),\r\n  createData('Nougat', \"adidas\", 19, 3.5, 30, 200),\r\n  createData('Oreo', \"adidas\", 18, 3.5, 0, 200),\r\n]\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Product' },\r\n  { id: 'Brand', numeric: false, disablePadding: true, label: 'Brand' },\r\n  { id: 'Stock', numeric: false, disablePadding: true, label: 'in Stock' },\r\n  { id: 'Rating', numeric: false, disablePadding: true, label: 'Rating' },\r\n  { id: 'Sales', numeric: false, disablePadding: true, label: 'Sales' },\r\n  { id: 'Price', numeric: false, disablePadding: true, label: 'Price' },\r\n\r\n]\r\n\r\n\r\nconst ProductManager = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"m-5 p-5\">\r\n      <div className=\"flex justify-end\">\r\n        <Button\r\n          onClick={handleOpen}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          สร้าง\r\n        </Button>\r\n      </div>\r\n      <div className=\"mt-3\">\r\n      <TableStyle topic=\"รายการสั่งสินค้า\" headCells={headCells} rows={rows} order={false} />\r\n      </div>\r\n\r\n      {/* create */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paperr}>\r\n            <CreateProduct />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst size = [\"XS\", \"S\", \"M\", \"L\", \"X\", \"XL\", \"XXL\"]\r\n\r\n\r\nconst CreateProduct = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Paper style={{width: 950, padding: \"25px 30px\"}}>\r\n        <Typography variant=\"h4\" className=\"w-full\">\r\n          เพิ่มสินค้า\r\n        </Typography> \r\n        <div className=\"flex\">\r\n          <div className=\"w-2/4 bg-red-50f0\">\r\n            <FormControl className={classes.margin} fullWidth variant=\"outlined\">\r\n                <InputLabel>ชื่อ</InputLabel>\r\n                <OutlinedInput\r\n                    type=\"text\"\r\n                    labelWidth={70}\r\n                />\r\n            </FormControl>\r\n            <FormControl className={classes.margin} fullWidth variant=\"outlined\">\r\n                <InputLabel>ราคา</InputLabel>\r\n                <OutlinedInput\r\n                    type=\"text\"\r\n                    labelWidth={70}\r\n                />\r\n            </FormControl>\r\n            <FormControl className={classes.margin} fullWidth variant=\"outlined\">\r\n                <InputLabel>แบรน</InputLabel>\r\n                <OutlinedInput\r\n                    type=\"text\"\r\n                    labelWidth={70}\r\n                />\r\n            </FormControl>\r\n            <FormControl className={classes.margin} fullWidth variant=\"outlined\">\r\n                <InputLabel>จำนวน</InputLabel>\r\n                <OutlinedInput\r\n                    type=\"text\"\r\n                    labelWidth={70}\r\n                />\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div className=\"w-2/4 bg-red-500f px-2 m-3\">\r\n            <div className=\"flex flex-col px-3\">\r\n              <Typography variant=\"h6\" className=\"w-full\">Size</Typography>\r\n              <FormGroup row>\r\n                { size.map((s, i) => (\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          //checked={state.checkedB}\r\n                          //onChange={handleChange}\r\n                          \r\n                          name=\"checkedB\"\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label={s}\r\n                      key={i}\r\n                    />\r\n                ))}\r\n\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n  )\r\n}\r\n\r\n\r\nexport default ProductManager;\r\n","C:\\New folder\\Laz\\src\\pages\\Dashboard.jsx",["144","145"],"import React from 'react'\r\nimport { \r\n        Avatar, \r\n        Paper,\r\n        List, \r\n        ListItem, \r\n        ListItemIcon, \r\n        ListItemText, \r\n        Grid,\r\n        Typography} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport { Route, Link } from 'react-router-dom';\r\nimport UserInfomation from '../components/UserInfomation'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n  }));\r\n\r\nconst menu = [\r\n    {\r\n        id: 1,\r\n        label: \"ข้อมูลส่วนตัว\",\r\n        icon: <AccountCircleIcon />,\r\n        path: \"/user/dashboard/infomation\"\r\n    },\r\n    {\r\n        id: 2,\r\n        label: \"แจ้งเตือน\",\r\n        icon: <NotificationsNoneIcon />,\r\n        path: \"/user/dashboard/notification\"\r\n    },\r\n    {\r\n        id: 3,\r\n        label: \"สินค้าที่อยากได้\",\r\n        icon: <FavoriteBorderIcon />,\r\n        path: \"/user/dashboard/whichlist\"\r\n    }\r\n]\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item lg={3}>\r\n             <Paper className=\"flex-col flex p-3 \">\r\n                 <div className=\"p-2 flex justify-center flex-col items-center \">\r\n                     <div className=\" w-36 flex justify-center relative\">\r\n                        <Avatar \r\n                            style={{width: \"115px\", height: \"115px\"}} \r\n                            src=\"https://images.unsplash.com/photo-1602423597260-6e754437411a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80\"\r\n                        />\r\n                        <div  className=\"absolute -bottom-1 z-10 -right-1\">\r\n                            <input accept=\"image/*\" className=\"hidden\" id=\"icon-button-file\" type=\"file\" />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                    <PhotoCamera fontSize=\"large\" />\r\n                                </IconButton>\r\n                            </label>\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"mt-2\">\r\n                        <Typography variant=\"h5\">Thomas Bruns</Typography>\r\n                        <p variant=\"subtitle2\" className=\"text-gray-500\">Joined June 6, 2018</p>\r\n                     </div>\r\n                 </div>\r\n                <div>\r\n                    <List component=\"nav\">\r\n                        { menu.map((m) => (\r\n                            <Link to={m.path}>\r\n                                <ListItem button key={m.id}>\r\n                                    <ListItemIcon>\r\n                                        {m.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={m.label} />\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n             </Paper>\r\n            </Grid>\r\n            <Grid item lg={9}>\r\n                <Paper className=\"p-3 min-h-screen\">\r\n                  <Route path=\"/user/dashboard/infomation\" component={UserInfomation} />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\New folder\\Laz\\src\\components\\Register.jsx",[],"C:\\New folder\\Laz\\src\\components\\FilterBlog.jsx",["146"],"import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { FormControlLabel, FormGroup, Checkbox, makeStyles } from '@material-ui/core';\r\n\r\nimport PanoramaFishEyeRoundedIcon from '@material-ui/icons/PanoramaFishEyeRounded';\r\nimport PanoramaFishEyeTwoToneIcon from '@material-ui/icons/PanoramaFishEyeTwoTone';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    filter: {\r\n        paddingTop: \"5px\",\r\n        fontSize: \"1rem\"\r\n    }\r\n}))\r\n\r\n\r\nconst FilterBlog = ({title, lists, shap}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.filter}>\r\n            <FormGroup>\r\n            {\r\n                lists.map((title, i) => (\r\n                    <FormControlLabel \r\n                        control={ \r\n                                shap ?\r\n                                <Checkbox\r\n                                    icon={<PanoramaFishEyeRoundedIcon fontSize=\"small\" />}\r\n                                    checkedIcon={<PanoramaFishEyeTwoToneIcon style={{color: title }} fontSize=\"small\"/>}\r\n                                    style={{color: title}}\r\n                                /> \r\n                                : \r\n                                <Checkbox color=\"primary\" />\r\n                                }   \r\n                        label={shap ? \"\" :title}\r\n                        key={i}\r\n                        \r\n                    />\r\n                ))\r\n            }\r\n            </FormGroup>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterBlog\r\n","C:\\New folder\\Laz\\src\\components\\Login.jsx",["147","148","149"],"import React from 'react'\r\nimport {\r\n        Typography,\r\n        FormControl,\r\n        TextField,\r\n        InputAdornment,\r\n        InputLabel,\r\n        OutlinedInput,\r\n        IconButton,\r\n        Button,\r\n    } from '@material-ui/core'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Btn from './Button';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(2)\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = React.useState({\r\n        username: '',\r\n        password: '',\r\n        showPassword: false,\r\n      });\r\n    \r\n      const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n    \r\n      const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n      };\r\n    \r\n      const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <div className=\"bg-white p-3 m-24 flex\">\r\n            <div className=\"flex flex-col w-3/5 borderr border-r-1 pb-3 border-r-2 border-fuchsia-600\">\r\n                <Typography className={classes.margin} variant=\"h5\" color=\"initial\">ยินดีต้อนรับ กรุณาเข้าสู่ระบบ</Typography>\r\n            \r\n                    <FormControl className={classes.margin} variant=\"outlined\">\r\n                        <InputLabel>Username</InputLabel>\r\n                        <OutlinedInput\r\n                            type=\"text\"\r\n                            labelWidth={70}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin} variant=\"outlined\">\r\n                        <InputLabel>Password</InputLabel>\r\n                        <OutlinedInput\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                edge=\"end\"\r\n                                >\r\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                            }\r\n                            labelWidth={70}\r\n                        />\r\n                    </FormControl>\r\n                    <Button  className={classes.margin} variant=\"outlined\" color=\"primary\">เข้าสู่ระบบ</Button>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col w-2/5 pt-14\">\r\n                <Link to=\"/user/register\">\r\n                    \r\n                <Button  className={classes.margin} variant=\"outlined\" color=\"primary\">สมัครสมาชิก</Button>\r\n                </Link>\r\n                <Typography  className={classes.margin}  variant=\"subtitle1\" color=\"initial\">หรือเข้าสู่ระบบด้วย</Typography>\r\n                <Button  className={classes.margin} variant=\"outlined\" color=\"secondary\">facebook</Button>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\New folder\\Laz\\src\\components\\UserInfomation.jsx",["150","151","152","153"],"import React from 'react'\r\n\r\nimport { \r\n    AppBar , \r\n    Paper,\r\n    Tabs , \r\n    Tab , \r\n    Typography, \r\n    Box,\r\n    Link as StyleLink, \r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n     } from '@material-ui/core'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      //width: 500,\r\n    },\r\n    link: {\r\n        width: \"225px\",\r\n        padding: \"10px 20px\",\r\n        color: \"#fff\",\r\n        textDecoration: \"none\",\r\n        backgroundColor: theme.palette.ford.main,\r\n        fontSize: \"18px\",\r\n        marginTop: \"10px\",\r\n        display: \"block\",\r\n        textAlign: \"center\",\r\n        \"&:hover\":{\r\n            backgroundColor: theme.palette.ford.dark\r\n        }\r\n    },\r\n    link2: {\r\n        //width: \"225px\",\r\n        padding: \"5px 8px\",\r\n        color: \"#fff\",\r\n        textDecoration: \"none\",\r\n        backgroundColor: theme.palette.ford.main,\r\n        fontSize: \"18px\",\r\n        marginTop: \"10px\",\r\n        \"&:hover\":{\r\n            backgroundColor: theme.palette.ford.dark\r\n        }\r\n    },\r\n  }));\r\n\r\n\r\nconst UserInfomation = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    const handleChangeIndex = (index) => {\r\n      setValue(index);\r\n    };\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    >\r\n                    <Tab label=\"เกี่ยวกับ\" />\r\n                    <Tab label=\"ที่อยู่\" />\r\n                    <Tab label=\"ตัวเลือกการชำระเงิน\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                \r\n                <TabPanel value={value} index={0}>\r\n                    <Person />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Address />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    Item Three\r\n                </TabPanel>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nfunction Person() {\r\n    const classes = useStyles()\r\n    return (\r\n        <div style={{minHeight: \"450px\"}} className=\"flex flex-wrap bg-yellowe-300 \">\r\n            <div className=\"w-2/4 bg-red-500e justify-around flex flex-col\">\r\n                <Typography className=\"mt-3\" variant=\"h6\">ชื่อ: Thomas Bruns</Typography>\r\n                <Typography className=\"mt-3\" variant=\"h6\">วันเกิด: 0/0/0</Typography>\r\n                <Typography className=\"mt-3\" variant=\"h6\">อีเมล: </Typography>\r\n                <Typography className=\"mt-3\" variant=\"h6\">เพศ: </Typography>\r\n\r\n            </div>\r\n            <div className=\"w-2/4 bg-red-500e justify-around flex flex-col\">\r\n                <Typography className=\"mt-3\" variant=\"h6\">เบอร์โทรศัพท์: </Typography>\r\n                <Typography className=\"mt-3\" variant=\"h6\">เลขประจำตัวผู้เสียภาษี: </Typography>\r\n            </div>\r\n            <div className=\"w-2/4 pt-3 mt-5\">\r\n                <Link to=\"/user/\" className={classes.link}>แก้ไขข้อมูล</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Address() {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n            <Accordion>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <Typography className={classes.heading}>ที่อยู่ 1</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Typography>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n                    sit amet blandit leo lobortis eget.\r\n                </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <Typography className={classes.heading}>ที่อยู่ 2</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Typography>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n                    sit amet blandit leo lobortis eget.\r\n                </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <div className=\"flex justify-end mt-10\">\r\n                <Link to=\"/user\" className={classes.link}>เพิ่มที่อยู่</Link>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n  \r\n\r\nexport default UserInfomation\r\n","C:\\New folder\\Laz\\src\\pages\\admin\\Table.jsx",["154"],"import React from 'react'\r\n\r\nimport { Paper, Button } from '@material-ui/core'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\n\r\nfunction TableStyle({ topic, rows, headCells }) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  \r\n    const handleRequestSort = (event, property) => {\r\n      const isAsc = orderBy === property && order === 'asc';\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    };\r\n  \r\n    const handleSelectAllClick = (event) => {\r\n      if (event.target.checked) {\r\n        const newSelecteds = rows.map((n) => n.name);\r\n        setSelected(newSelecteds);\r\n        return;\r\n      }\r\n      setSelected([]);\r\n    };\r\n  \r\n    const handleClick = (event, name) => {\r\n      const selectedIndex = selected.indexOf(name);\r\n      let newSelected = [];\r\n  \r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, name);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1),\r\n        );\r\n      }\r\n  \r\n      setSelected(newSelected);\r\n    };\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n  \r\n    const handleChangeDense = (event) => {\r\n      setDense(event.target.checked);\r\n    };\r\n  \r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n  \r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  \r\n    return (\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <EnhancedTableToolbar topic={topic} numSelected={selected.length} />\r\n            <TableContainer>\r\n              <Table\r\n                className={classes.table}\r\n                aria-labelledby=\"tableTitle\"\r\n                size={dense ? 'small' : 'medium'}\r\n                aria-label=\"enhanced table\"\r\n              >\r\n                <EnhancedTableHead\r\n                  headCells={headCells}\r\n                  classes={classes}\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                  onRequestSort={handleRequestSort}\r\n                  rowCount={rows.length}\r\n                />\r\n                <TableBody>\r\n                  {stableSort(rows, getComparator(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                      const isItemSelected = isSelected(row.name);\r\n                      const labelId = `enhanced-table-checkbox-${index}`;\r\n    \r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          onClick={(event) => handleClick(event, row.name)}\r\n                          role=\"checkbox\"\r\n                          aria-checked={isItemSelected}\r\n                          tabIndex={-1}\r\n                          key={row.name}\r\n                          selected={isItemSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              checked={isItemSelected}\r\n                              inputProps={{ 'aria-labelledby': labelId }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                            {row.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.Brand}</TableCell>\r\n                          <TableCell align=\"right\">{row.Stock}</TableCell>\r\n                          <TableCell align=\"right\">{row.Rating}</TableCell>\r\n                          <TableCell align=\"right\">{row.Sales}</TableCell>\r\n                          <TableCell align=\"right\">{row.Price}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n          <FormControlLabel\r\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n            label=\"Dense padding\"\r\n          />\r\n        </div>\r\n      );\r\n}\r\n\r\n// function createData(name, Brand, Stock, Rating, Sales, Price) {\r\n//     return { name, Brand, Stock, Rating, Sales, Price };\r\n//   }\r\n\r\n// const rows = [\r\n//     createData('Cupcake', \"adidas\", 10, 3.5, 0, 200),\r\n//     createData('Donut', \"452\", 25, 3.5, 0, 200),\r\n//     createData('Eclair', \"Nike\", 16, 3.5, 0, 200),\r\n//     createData('Frozen yoghurt', \"Hoya\", 3.5, 24, 0, 200),\r\n//     createData('Gingerbread', \"univers\", 3.5, 49, 0, 200),\r\n//     createData('Honeycomb', \"adidas\", 3, 3.5, 6.5, 200),\r\n//     createData('Ice cream sandwich', \"uniqo\", 9.0, 3.5, 0, 200),\r\n//     createData('Jelly Bean', \"uniqo\", 10, 3.5, 0, 200),\r\n//     createData('KitKat', \"Nike\", 26, 3.5, 0, 200),\r\n//     createData('Lollipop', \"Hoya\", 2, 3.5, 0, 200),\r\n//     createData('Marshmallow', \"Nike\", 0, 81, 0, 200),\r\n//     createData('Nougat', \"adidas\", 19, 3.5, 30, 200),\r\n//     createData('Oreo', \"adidas\", 18, 3.5, 0, 200),\r\n// ]\r\n\r\n// const headCells = [\r\n//     { id: 'name', numeric: false, disablePadding: true, label: 'Product' },\r\n//     { id: 'Brand', numeric: false, disablePadding: true, label: 'Brand' },\r\n//     { id: 'Stock', numeric: false, disablePadding: true, label: 'in Stock' },\r\n//     { id: 'Rating', numeric: false, disablePadding: true, label: 'Rating' },\r\n//     { id: 'Sales', numeric: false, disablePadding: true, label: 'Sales' },\r\n//     { id: 'Price', numeric: false, disablePadding: true, label: 'Price' },\r\n\r\n// ]\r\n\r\n// ------------ sort ----------------------\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.numeric ? 'right' : 'left'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n//----------what-----------\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  }));\r\n\r\n\r\n// ------- tophead----\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n  \r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n            {props.topic}\r\n          </Typography>\r\n        )}\r\n  \r\n        {numSelected > 0 ? (\r\n          <>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Edit\">\r\n            <IconButton aria-label=\"delete\">\r\n              <CreateIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          </>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </Toolbar>\r\n    );\r\n  };\r\n  \r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\nexport default TableStyle","C:\\New folder\\Laz\\src\\pages\\OrdersManager.jsx",[],"C:\\New folder\\Laz\\src\\pages\\Cart.jsx",[],"C:\\New folder\\Laz\\src\\components\\CartItem.jsx",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":5,"column":45,"nodeType":"161","messageId":"162","endLine":5,"endColumn":56},{"ruleId":"159","severity":1,"message":"163","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":12},{"ruleId":"159","severity":1,"message":"164","line":7,"column":3,"nodeType":"161","messageId":"162","endLine":7,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":9,"column":3,"nodeType":"161","messageId":"162","endLine":9,"endColumn":14},{"ruleId":"159","severity":1,"message":"165","line":10,"column":3,"nodeType":"161","messageId":"162","endLine":10,"endColumn":17},{"ruleId":"159","severity":1,"message":"166","line":11,"column":3,"nodeType":"161","messageId":"162","endLine":11,"endColumn":12},{"ruleId":"159","severity":1,"message":"167","line":14,"column":3,"nodeType":"161","messageId":"162","endLine":14,"endColumn":9},{"ruleId":"168","severity":1,"message":"169","line":99,"column":24,"nodeType":"170","messageId":"171","endLine":99,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":123,"column":21,"nodeType":"174","endLine":123,"endColumn":62},{"ruleId":"175","severity":1,"message":"176","line":142,"column":19,"nodeType":"174","endLine":147,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":150,"column":19,"nodeType":"174","endLine":155,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":236,"column":41,"nodeType":"170","messageId":"171","endLine":236,"endColumn":43},{"ruleId":"159","severity":1,"message":"167","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":14},{"ruleId":"159","severity":1,"message":"177","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":19},{"ruleId":"159","severity":1,"message":"178","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":22},{"ruleId":"159","severity":1,"message":"179","line":11,"column":30,"nodeType":"161","messageId":"162","endLine":11,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":63,"column":1,"nodeType":"182","messageId":"183","endLine":92,"endColumn":20},{"ruleId":"159","severity":1,"message":"184","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"185","line":16,"column":8,"nodeType":"161","messageId":"162","endLine":16,"endColumn":34},{"ruleId":"159","severity":1,"message":"186","line":60,"column":17,"nodeType":"161","messageId":"162","endLine":60,"endColumn":25},{"ruleId":"159","severity":1,"message":"187","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":24},{"ruleId":"159","severity":1,"message":"188","line":9,"column":9,"nodeType":"161","messageId":"162","endLine":9,"endColumn":14},{"ruleId":"159","severity":1,"message":"179","line":16,"column":10,"nodeType":"161","messageId":"162","endLine":16,"endColumn":15},{"ruleId":"159","severity":1,"message":"189","line":66,"column":11,"nodeType":"161","messageId":"162","endLine":66,"endColumn":22},{"ruleId":"159","severity":1,"message":"190","line":13,"column":5,"nodeType":"161","messageId":"162","endLine":13,"endColumn":19},{"ruleId":"159","severity":1,"message":"191","line":16,"column":5,"nodeType":"161","messageId":"162","endLine":16,"endColumn":15},{"ruleId":"159","severity":1,"message":"192","line":15,"column":8,"nodeType":"161","messageId":"162","endLine":15,"endColumn":17},{"ruleId":"159","severity":1,"message":"193","line":49,"column":11,"nodeType":"161","messageId":"162","endLine":49,"endColumn":18},{"ruleId":"159","severity":1,"message":"177","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":18},{"ruleId":"159","severity":1,"message":"194","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":18},{"ruleId":"159","severity":1,"message":"195","line":12,"column":8,"nodeType":"161","messageId":"162","endLine":12,"endColumn":21},{"ruleId":"159","severity":1,"message":"196","line":17,"column":8,"nodeType":"161","messageId":"162","endLine":17,"endColumn":11},{"ruleId":"159","severity":1,"message":"197","line":5,"column":5,"nodeType":"161","messageId":"162","endLine":5,"endColumn":10},{"ruleId":"159","severity":1,"message":"198","line":10,"column":13,"nodeType":"161","messageId":"162","endLine":10,"endColumn":22},{"ruleId":"159","severity":1,"message":"199","line":15,"column":22,"nodeType":"161","messageId":"162","endLine":15,"endColumn":30},{"ruleId":"159","severity":1,"message":"200","line":61,"column":11,"nodeType":"161","messageId":"162","endLine":61,"endColumn":28},{"ruleId":"159","severity":1,"message":"167","line":3,"column":17,"nodeType":"161","messageId":"162","endLine":3,"endColumn":23},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.","'FormLabel' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Typography' is defined but never used.","'MemoryRouter' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useEffect' is defined but never used.","'PanoramaFishEyeTwoToneIcon' is defined but never used.","'setImage' is assigned a value but never used.","'useState' is defined but never used.","'Modal' is defined but never used.","'handleClick' is assigned a value but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'InboxIcon' is defined but never used.","'classes' is assigned a value but never used.","'TextField' is defined but never used.","'AccountCircle' is defined but never used.","'Btn' is defined but never used.","'Paper' is defined but never used.","'StyleLink' is defined but never used.","'useTheme' is defined but never used.","'handleChangeIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]